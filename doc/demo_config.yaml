# FASTQ Metadata table
# --------------------

# Required columns:
# - entity: e.g. HSC, Patient1
# - sample: e.g. Tumor, Control, cell 1/2/3
# - read_number: integer
# - path: path to untrimmed fastq files for read 1 and read 2

# if fast_pattern is given: location where the automatically created metadata table should be stored
# (with a timestamp)
# else: metadata table is read from this location
# [required]
metadata_table_tsv:
  /icgc/dkfzlsdf/analysis/hs_ontogeny/results/wgbs/scwgbs_alignment/alignment-metadata/bravo-pilot.tsv

# if a fastq_pattern is provided, it must have the fields: entity, sample, read_number and it must additionally have at least one additional field which serves to distinguish read pairs (even if this is not really necessary for the given dataset).
# The fastq_pattern will be used to create a metadata table with one column per field (using smk_wgbs.create_metadata_table_from_file_pattern).
# The metadata table will be placed at metadata_table_tsv (with a timestamp before the suffix)
# [optional]
fastq_pattern:
  /icgc/dkfzlsdf/project/mouse_hematopoiesis_PBAT/sequencing/whole_genome_bisulfite_tagmentation_sequencing/view-by-pid/{entity}/{sample}/paired/run{run}/sequence/AS-{asid}-LR-{lane}_R{read_number}.fastq.gz

# a list of entity names can be used to restrict the analysis to the specified samples
# if fastq_pattern is used, the auto-constructed metadata table will only contain entries for the requested files.
# [optional]
entities:
  - lsk150_pr-hiera_ex-scnmt-1_cls-1
#  - hsc_pr-scbs_ex-test-1_cls-1_1


# Other input paths
# -----------------

# The path to the folder containing either i) the genome to be bisulfite converted.
# or ii) the bisulfite converted genomes produced by Bismark (the parent folder of Bisulfite_Genome/)
# When the genome is to be created,the Bismark Genome Preparation expects one or more fastA files in the folder (with the file extension: .fa or .fasta (also ending in .gz)).
# [required]
genome_dir:
  /icgc/dkfzlsdf/analysis/B080/kraemers/projects/mbias/sandbox/genomes/GRCm38mm10_PhiX_Lambda_bismark
genome_fa:
  /icgc/dkfzlsdf/analysis/B080/kraemers/projects/mbias/sandbox/genomes/GRCm38mm10_PhiX_Lambda_bismark/GRCm38mm10_PhiX_Lambda.fa


# Output file paths
# -----------------

# [required]
log_dir:
  /icgc/dkfzlsdf/analysis/hs_ontogeny/results/wgbs/scwgbs_alignment/logs

# If a results per entity directory is specified, relative result_paths are interpreted as relative to this directory
# If not specified, relative result_paths will raise a ValueError
# [required] if result_patterns are relative (the default), otherwise optional
rpe_dir:
  /icgc/dkfzlsdf/analysis/hs_ontogeny/results/wgbs/scwgbs_alignment/results-per-entity

# The result_patterns usually do not need to be edited, unless you want to overwrite the default
# file structure created by the workflow. All paths must keep all required fields, of course.
# all bam files have bai indices, even though the paths are not directly specified here
result_patterns:

  # Turn into temporary or piped result?
  # basename must match basename of atomic_bam_unsorted, because bismark output name cannot be changed when using parallel processing
  trimmed_fastq:
    '{entity}/{sample}/raw_data/{entity}_{sample}_lib-{lib}_{uid}_R{read_number}_trimmed.fastq.gz'

  # eg will end up {entity}/{sample}/raw_data/run-{run_id}_asid-{as_id}_LR-{lane_id}_R{read_number}.trimmed.fastq.gz
  # wildcard constraints not necessary: entity and sample may contain _ and - and be greedy, because they are correctly matched by the first two folders of the path
  bam_per_read:
    '{entity}/{sample}/alignment/{entity}_{sample}_R{read_number}.bam'
  mcalls_se_cg_per_cyt:
    '{entity}/{sample}/meth-calls/partial-meth-calls/SE_{entity}_{sample}_per-cytosine_CpG.bed'
  se_bam:
    '{entity}/{sample}/alignment/partial-alignments/SE_{entity}_{sample}.bam'
  library_bam:
    '{entity}/{sample}/alignment/partial-alignments/{entity}_{sample}_lib-{lib}.bam'
  #  library_bam_per_read:
  #    '{entity}/{sample}/alignment/partial-alignments/{entity}_{sample}_lib-{lib}_R{read_number}.bam'
  # to allow arbitrary uid tags without a uid keyword (uid_run-abc_lane-001 is not consistent),
  # lib may not contain underscorse
  # uid is composed of all other fields in metadata table
  # --basename to control name in bismark currently not compatible with multicore run
  # so we have to use the fastq stem (bismarks default)
  atomic_bam_unsorted:
    '{entity}/{sample}/alignment/partial-alignments/{entity}_{sample}_lib-{lib}_{uid}_R{read_number}_trimmed_bismark_bt2.bam'
  atomic_bam_sorted:
    '{entity}/{sample}/alignment/partial-alignments/{entity}_{sample}_lib-{lib}_{uid}_R{read_number}.bam'

  # deprecated
  #  bam_per_lane_read:
  #    {entity}/{sample}/alignment/partial-alignments/lane-alignments/{run_id}/AS-{as_id}-LR-{lane_id}_R{read_number}.trimmed_bismark_bt2.bam


#Else
#----

# For chromosome categoricals and ordering
chromosomes: ["1", "2", "3", "4", "5", "6", "7", "8", "9",
              "10", "11", "12", "13", "14", "15", "16", "17", "18", "19",
              "X", "Y", "MT", "phix", "L"]
